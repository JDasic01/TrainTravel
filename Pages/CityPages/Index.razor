@page "/cities"
@inject HttpClient HttpClient
@using System.Net.Http.Json;
@using System.Net.Http.Headers;
@using Blazor.Data;
@inject NavigationManager Navigation

<PageTitle>Cities</PageTitle>

<h1>Cities</h1>
@if(isLoading)
{
    <p>Loading...</p>
}
else if(!string.IsNullOrEmpty(errorMessage))
{
    <p>@errorMessage</p>
}
else
{
<a class="btn btn-primary" href="/cities/add" role="button">New city</a>

    <table class="table">
        <thead>
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Id</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var city in cities)
            {
            <tr>
                    <td><a href="/cities/@city.city_id">@city.city_name</a></td>
                    <td>@city.city_id</td>
                    <td><a class="btn btn-secondary" href="/cities/update/@city.city_id" role="button">Update</a></td>
                    <td><a class="btn btn-secondary"  @onclick="() => DeleteData(city.city_id)" role="button">Delete</a></td>
            </tr>
            }
        </tbody>
    </table>

}

@code {
    private bool isLoading = true;
    private string errorMessage = "";
    private GetCity[] cities = new GetCity[0];

    protected override async Task OnInitializedAsync()
    {
        try
        {
            cities = await HttpClient.GetFromJsonAsync<GetCity?[]>("https://dolphin-app-df2gw.ondigitalocean.app/api/City");
            isLoading = false;
        }
        catch (Exception ex)
        {
            errorMessage = "Failed to load data. Please try again later.";
            Console.Error.WriteLine(ex.Message);
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task DeleteData(int id)
    {
        var response = await HttpClient.DeleteAsync($"/City/{id}");

        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/cities", forceLoad: true);
        }
    }
}